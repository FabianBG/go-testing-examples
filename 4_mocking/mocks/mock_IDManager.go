// Code generated by MockGen. DO NOT EDIT.
// Source: avalith/testing/mocking/interfaces (interfaces: IDManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDManager is a mock of IDManager interface
type MockIDManager struct {
	ctrl     *gomock.Controller
	recorder *MockIDManagerMockRecorder
}

// MockIDManagerMockRecorder is the mock recorder for MockIDManager
type MockIDManagerMockRecorder struct {
	mock *MockIDManager
}

// NewMockIDManager creates a new mock instance
func NewMockIDManager(ctrl *gomock.Controller) *MockIDManager {
	mock := &MockIDManager{ctrl: ctrl}
	mock.recorder = &MockIDManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDManager) EXPECT() *MockIDManagerMockRecorder {
	return m.recorder
}

// GenID mocks base method
func (m *MockIDManager) GenID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenID indicates an expected call of GenID
func (mr *MockIDManagerMockRecorder) GenID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenID", reflect.TypeOf((*MockIDManager)(nil).GenID))
}
